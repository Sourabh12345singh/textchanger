{"ast":null,"code":"var _jsxFileName = \"D:\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.title = 'Textutils- dark mode ';\n    } else {\n      setMode('light');\n      document.title = 'Textutils- light mode ';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"My Website\",\n        home: \"Welcome to my homepage!\",\n        mode: mode,\n        togglemode: togglemode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Textform, {\n            heading: \"The great text app\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Vs8mkvwR7CZ7J6LLj80enWdttac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","Textform","React","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","togglemode","document","title","children","home","fileName","_jsxFileName","lineNumber","columnNumber","path","heading","_c","$RefreshReg$"],"sources":["D:/myapp/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light'); \n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.title = 'Textutils- dark mode '\n    } else {\n      setMode('light');\n      document.title = 'Textutils- light mode '\n    }\n  };\n\n  return (\n    <>\n    <Route>\n   <Navbar title=\"My Website\" home=\"Welcome to my homepage!\" mode = {mode} togglemode = {togglemode} />\n\n   <Switch>\n          <Route path=\"/about\">\n          <About/>\n          </Route>\n         \n        \n          <Route path=\"/\">\n          <Textform heading= \"The great text app\"   mode = {mode} />\n          </Route>\n        </Switch>\n   </Route>\n\n\n\n  \n\n\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,KAAK,GAAG,uBAAuB;IAC1C,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,KAAK,GAAG,wBAAwB;IAC3C;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACAV,OAAA,CAACH,KAAK;MAAAa,QAAA,gBACPV,OAAA,CAACV,MAAM;QAACmB,KAAK,EAAC,YAAY;QAACE,IAAI,EAAC,yBAAyB;QAACN,IAAI,EAAIA,IAAK;QAACE,UAAU,EAAIA;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEpGf,OAAA,CAACJ,MAAM;QAAAc,QAAA,gBACAV,OAAA,CAACH,KAAK;UAACmB,IAAI,EAAC,QAAQ;UAAAN,QAAA,eACpBV,OAAA,CAACX,KAAK;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGRf,OAAA,CAACH,KAAK;UAACmB,IAAI,EAAC,GAAG;UAAAN,QAAA,eACfV,OAAA,CAACT,QAAQ;YAAC0B,OAAO,EAAE,oBAAoB;YAAGZ,IAAI,EAAIA;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBAQL,CAAC;AAEP;AAACX,EAAA,CAvCQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}