{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Textform(props){const handleupclick=()=>{// console.log(\"upper case was clicked\" + text);\nlet newtext=text.toUpperCase();settext(newtext);};const cleartext=()=>{let newtext='';settext(newtext);};const handleflclick=()=>{let newtext=cp(text);settext(newtext);};function cp(str){return str.split(' ')// Split the string by spaces into an array of words\n.map(word=>word.charAt(0).toUpperCase()+word.slice(1))// Capitalize each word\n.join(' ');// Join the array back into a single string\n}const handlefclclick=()=>{let newtext=fcl(text);settext(newtext);};function fcl(str){return str.split('. ')// Split the string by \". \" to separate sentences\n.map(sentence=>sentence.charAt(0).toUpperCase()+sentence.slice(1))// Capitalize the first letter of each sentence\n.join('. ');// Join the sentences back with \". \"\n}const removeextraspaces=()=>{let newtext=text.split(/\\s+/);// Matches one or more spaces\nsettext(newtext.join(\" \").trim());// Joins words with a single space and trims leading/trailing spaces\n};const copytext=()=>{let textbox=document.getElementById(\"box\");// Access the textarea/input by its ID\ntextbox.select();// Selects the text inside the element\nnavigator.clipboard.writeText(textbox.value);// Copies the text to the clipboard\n};const handleloclick=()=>{let newtext=text.toLocaleLowerCase();settext(newtext);};const handleonchnage=event=>{//console.log(\"onchange\");\nsettext(event.target.value);};const[text,settext]=useState('Enter the text here');return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container mb-3\",style:{color:props.mode==='light'?'black':'white'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"container \",style:{color:props.mode==='light'?'#2b2a2cc7':'#000000c7'},children:/*#__PURE__*/_jsx(\"h1\",{children:props.heading})}),/*#__PURE__*/_jsx(\"div\",{className:\"my-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:handleonchnage,style:{background:props.mode==='light'?'white':'black',color:props.mode==='light'?'black':'white'},id:\"box\",rows:\"10\",children:\"  \"})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:handleupclick,children:\"Convert to UpperCase  \"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:handleloclick,children:\"Convert to lowercase  \"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:handlefclclick,children:\"Convert to basic form  \"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:cleartext,children:\"clear text  \"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:handleflclick,children:\"Convert to first letter capital  \"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:removeextraspaces,children:\"Remove Extra spaces  \"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark mx-2\",onClick:copytext,children:\"copy text \"})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"container my-3\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"   Your Text Summary \"}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",text.split(\" \").length-1,\" words and \",text.length,\" Characters\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",0.0075*text.split(\" \").length,\" seconds will take only\"]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:props.mode==='light'?'black':'white',background:props.mode==='light'?'white':'black'},rows:\"10\",children:text})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Textform","props","handleupclick","newtext","text","toUpperCase","settext","cleartext","handleflclick","cp","str","split","map","word","charAt","slice","join","handlefclclick","fcl","sentence","removeextraspaces","trim","copytext","textbox","document","getElementById","select","navigator","clipboard","writeText","value","handleloclick","toLocaleLowerCase","handleonchnage","event","target","children","className","style","color","mode","heading","onChange","background","id","rows","onClick","class","length"],"sources":["D:/myapp/src/components/Textform.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n  \r\nconst handleupclick = () => {\r\n // console.log(\"upper case was clicked\" + text);\r\n  let newtext = text.toUpperCase();\r\n  settext(newtext);\r\n}\r\n\r\n\r\nconst cleartext = () => {\r\n   let newtext = '';\r\n   settext(newtext);\r\n }\r\n\r\n\r\n const handleflclick = () => {\r\n  let newtext = cp(text);\r\n  settext(newtext);\r\n}\r\nfunction cp(str) {\r\n  \r\n  return str\r\n      .split(' ') // Split the string by spaces into an array of words\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize each word\r\n      .join(' '); // Join the array back into a single string\r\n}\r\n\r\nconst handlefclclick = () => {\r\n  let newtext = fcl(text);\r\n  settext(newtext);\r\n}\r\nfunction fcl(str) {\r\n  return str\r\n    .split('. ') // Split the string by \". \" to separate sentences\r\n    .map(sentence => sentence.charAt(0).toUpperCase() + sentence.slice(1)) // Capitalize the first letter of each sentence\r\n    .join('. '); // Join the sentences back with \". \"\r\n}\r\n\r\nconst removeextraspaces = () => {\r\n  let newtext = text.split(/\\s+/); // Matches one or more spaces\r\n  settext(newtext.join(\" \").trim()); // Joins words with a single space and trims leading/trailing spaces\r\n};\r\n\r\n\r\nconst copytext = () => {\r\n  let textbox = document.getElementById(\"box\"); // Access the textarea/input by its ID\r\n  textbox.select(); // Selects the text inside the element\r\n  navigator.clipboard.writeText(textbox.value); // Copies the text to the clipboard\r\n};\r\n\r\n\r\n\r\n\r\nconst handleloclick = () => {\r\n  let newtext = text.toLocaleLowerCase();\r\n  settext(newtext);\r\n}\r\n\r\nconst handleonchnage = (event) => {\r\n  //console.log(\"onchange\");\r\n  settext(event.target.value);\r\n}\r\n\r\n  const [text, settext] = useState('Enter the text here');\r\n\r\n  return (\r\n\r\n    <>\r\n      <div \r\n  className=\"container mb-3\" \r\n  style={{ color: props.mode === 'light' ? 'black' : 'white' }}\r\n>\r\n\r\n    <div  className='container ' style={{ color: props.mode === 'light' ? '#2b2a2cc7' : '#000000c7' }} > \r\n       <h1>{props.heading}</h1>\r\n       </div>\r\n        <div className=\"my-3\">\r\n            {/* <label for=\"box \" className=\"form-label\"> area to write</label> */}\r\n            <textarea className=\"form-control\" value={text} onChange={handleonchnage}   style={{\r\n    background: props.mode === 'light' ? 'white' : 'black',\r\n    color: props.mode === 'light' ? 'black' : 'white',\r\n  }} id=\"box\"  rows = \"10\"  >  </textarea>\r\n        </div>\r\n        <button className=\"btn btn-dark mx-2\" onClick={handleupclick}>Convert to UpperCase  </button>\r\n        <button className=\"btn btn-dark mx-2\" onClick={handleloclick}>Convert to lowercase  </button>\r\n        <button className=\"btn btn-dark mx-2\" onClick={handlefclclick}>Convert to basic form  </button>\r\n        <button className=\"btn btn-dark mx-2\" onClick={cleartext}>clear text  </button>\r\n        <button className=\"btn btn-dark mx-2\" onClick={handleflclick}>Convert to first letter capital  </button>\r\n        <button className=\"btn btn-dark mx-2\" onClick={removeextraspaces}>Remove Extra spaces  </button>\r\n        <button className=\"btn btn-dark mx-2\" onClick={copytext}>copy text </button>\r\n    </div>\r\n\r\n    <div class = \"container my-3\">\r\n    <h3>   Your Text Summary </h3>\r\n    <p> {text.split(\" \").length -1} words and {text.length} Characters</p>\r\n    <p> { (0.0075 ) * text.split(\" \").length  } seconds will take only</p>\r\n    <h3  >Preview</h3> \r\n    <p style={{color: props.mode === 'light' ? 'black' : 'white',\r\n      background: props.mode === 'light' ? 'white' : 'black'}} rows = \"10\" >{text}</p>\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}